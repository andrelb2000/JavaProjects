/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aula11ex1_carrinhos;

import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Iterator;

/**
 *
 * @author andre
 */
public class PistaCorridaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PistaCorridaJPanel
     */
    
    
    private ArrayList<Veiculo> listaVeiculos;
    private boolean iniciar = false;
    
    public PistaCorridaJPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public ArrayList<Veiculo> getListaVeiculos() {
        return listaVeiculos;
    }

    public void setListaVeiculos(ArrayList<Veiculo> listaVeiculos) {
        this.listaVeiculos = listaVeiculos;
    }

    public boolean isIniciar() {
        return iniciar;
    }

    public void setIniciar(boolean iniciar) {
        this.iniciar = iniciar;
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
        if(listaVeiculos != null){
            Iterator<Veiculo> it = listaVeiculos.iterator();
            while(it.hasNext()){
                Veiculo v = (Veiculo)it.next();
                int[] rect1 = v.getPosRect1();
                int[] rect2 = v.getPosRect2();
                int[] cir1  = v.getPosCircle1();
                int[] cir2  = v.getPosCircle2();

                g.drawRect(v.getxInicial() + rect1[2] , v.getyInicial() + rect1[3], rect1[2], rect1[3]);
                g.drawRect(v.getxInicial() + rect2[2] , v.getyInicial() + rect2[3], rect2[2], rect2[3]);

            }
        }   
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
